procedure pPostInsumo(entidad : TypMantGenerico);
sql : string;
conexion : integer;
sResultado : SysCode;
id : integer;
l_Nombretabla:string:="Insumo";
begin
    id := fGetNextId(l_Nombretabla,CONST_MAX_DB_INSUMO);
    sql := "Insert into Insumo (Id, Codigo, Nombre, Activo,NumBalan) values (";
    sql := sql + IntegerToString(id, 0) + ",";
    sql := sql + "'"+ entidad.Codigo + "', ";
    sql := sql + "'" +entidad.Nombre + "',1, ";
    sql := sql + IntegerToString(entidad.NumBalanza,0) + ")";
    sResultado := DbExec(sql, conexion);
    if (sResultado <> SysOk) then
        pLoggerDB("pPostInsumo",DBErrMsg);
        return;
    end if;
    --pMostrarYLimpiar("Se agrego correctamente");
end;

procedure pPutInsumo(entidad : TypMantGenerico);
sql : string;
conexion : integer;
sResultado : SysCode;

begin
	sql:="Update Insumo set ";
	sql:=sql + "codigo='" + entidad.Codigo+ "',";
	sql:=sql + "nombre='" + entidad.Nombre + "', ";
    sql:=sql + "NumBalan=" +IntegerToString(entidad.NumBalanza,0) + " ";
	sql:=sql + "where id="+IntegerToString(g_IdItemActual,0);
			
	sResultado := DbExec(sql, conexion);
	if (sResultado <> SysOk) then
		pLoggerDB("pPutInsumo",DBErrMsg);
		return;
	end if;

	pMostrarYLimpiar("Se actualizo con Éxito");
end;

function fGetInsumo(Id : integer) : TypInsumo;
sql : string;
conexion : integer;
sResultado : SysCode;
Insumo : TypInsumo;
begin
    sql:="select * from Insumo where id = ";
    sql:=sql + IntegerToString(Id, 0);

    sResultado := DbExec(sql, conexion);
    --Primero verificamos que la consulta sea diferente de OK. Esto es error
    if(sResultado<>SysOk) then 
        pLoggerDB("fGetInsumo",DBErrMsg);
        return Insumo;
    end if;
    
    -- Luego verificamos que la conexión sea = 0. Eso quiere decir que no hay datos para recuperar
    if (conexion=0) then
        return Insumo;
    end if;

    -- Caso contrario, tomamos los datos y los leemos.
    DbColumnInt(conexion, 1, Insumo.Id); 
    DbColumnString(conexion, 2, Insumo.Codigo); 
    DbColumnString(conexion, 3, Insumo.Nombre);  
    DbColumnInt(conexion, 4, Insumo.Activo);  
    DbColumnInt(conexion, 5, Insumo.NumBalanza); 
    sResultado := DbNext(conexion);  
    DbFinalize(conexion);
    pMostrarYLimpiar("Se obtuvo correctamente");
    return Insumo;
end;



function fListaInsumo : TypArrayInsumo;
sql : string;
conexion : integer;
sResultado : SysCode;
listado : TypArrayInsumo;
indice : integer;
begin
    sql := "select Insumo.Id, Insumo.Codigo, Insumo.Nombre, ";
    sql := sql + " Insumo.NumBalan,Balanza.Nombre ";
    sql := sql + " from Insumo left Join balanza ";
    sql := sql + " on Insumo.NumBalan=Balanza.Id ";
    sql := sql + " where Insumo.activo=1 order by Insumo.Id asc limit "+IntegerToString(g_ItemsPorPagina,0);
    sql :=sql + " Offset "+IntegerToString(g_PaginaActual - 1, 0);

    sResultado := DbExec(sql, conexion);
    --Primero verificamos que la consulta sea diferente de OK. Esto es error
    if(sResultado<>SysOk) then 
        pLoggerDB("fListaInsumo",DBErrMsg);
        return listado;
    end if;
    
    -- Luego verificamos que la conexión sea = 0. Eso quiere decir que no hay datos para recuperar
    if (conexion=0) then
        return listado;
    end if;

    -- Caso contrario, tomamos los datos y los leemos.

    indice := 0;
    while sResultado = SysOk 
    loop
        indice := indice +1;
        DbColumnInt(conexion, 1, listado[indice].Id); 
        DbColumnString(conexion, 2, listado[indice].Codigo); 
        DbColumnString(conexion, 3, listado[indice].Nombre);  
        DbColumnInt(conexion, 4, listado[indice].NumBalanza); 
        DbColumnString(conexion, 5, listado[indice].NBalanza);  
        sResultado := DbNext(conexion);  
    end loop;

    DbFinalize(conexion);
    --pMostrarYLimpiar("Se listo correctamente");

    return listado;
end;


function fGetNombreInsumoByCodigo(Codigo : string) : string;
sql : string;
conexion : integer;
sResultado : SysCode;
Nombre : string;
begin
    sql:="select Nombre from Insumo where Codigo='"+Codigo+"' limit 1";
    sResultado := DbExec(sql, conexion);
    --Primero verificamos que la consulta sea diferente de OK. Esto es error
    if(sResultado<>SysOk) then 
        pMostrarYLimpiar("Error en la consulta");
        return Nombre;
    end if;
    
    -- Luego verificamos que la conexión sea = 0. Eso quiere decir que no hay datos para recuperar
    if (conexion=0) then
        return Nombre;
    end if;

    DbColumnString(conexion, 1, Nombre);  
    sResultado := DbNext(conexion);  
    DbFinalize(conexion);
    pMostrarYLimpiar("Se obtuvo correctamente");
    return Nombre;
end;

function fGetIdInsumoByCodigo(Codigo : string) : integer;
sql : string;
conexion : integer;
sResultado : SysCode;
IdInsumo : integer:=0;
begin
    sql:="select Id from Insumo where Activo=1 and Codigo='"+Codigo+"' limit 1";
    sResultado := DbExec(sql, conexion);
    --Primero verificamos que la consulta sea diferente de OK. Esto es error
    if(sResultado<>SysOk) then 
        pLoggerDB("fGetIdInsumoByCodigo",DBErrMsg);
        return IdInsumo;
    end if;
    
    -- Luego verificamos que la conexión sea = 0. Eso quiere decir que no hay datos para recuperar
    if (conexion=0) then
       pLoggerDB("fGetIdInsumoByCodigo","No Hay Datos para Recuperar Codigo:"+Codigo+" Y "+IntegerToString(IdInsumo,0));
        return IdInsumo;
    end if;

    DbColumnInt(conexion, 1, IdInsumo);  
    sResultado := DbNext(conexion);  
    DbFinalize(conexion);
    pMostrarYLimpiar("Se obtuvo correctamente");
    return IdInsumo;
end;

procedure pDesactivarItemInsumo(id:integer);
sql : string;
conexion : integer;
sResultado : SysCode;

begin
	sql:="Update Insumo set Activo=0 ";
	sql:=sql + " where id="+ IntegerToString(id,0);

	sResultado := DbExec(sql, conexion);
	if (sResultado <> SysOk or conexion = 0) then
		pLoggerDB("pDesactivarItemInsumo",DBErrMsg);
		return;
	end if;

	pMostrarYLimpiar("Se Desactivo con éxito el registro con Id "+IntegerToString(id,0));
end;
